heat_template_version: newton

parameters:

  overcloud_flavor:
    type: string
    default: overcloud
    description: Nova flavor for overcloud instances. Recommended to be at least 4
                 vcpu, 8 GB RAM, 40 GB disk

  overcloud_image:
    type: string
    default: empty
    description: The base image to use for overcloud instances

  key_name:
    type: string
    default: default
    description: Nova keypair to inject into the undercloud and overcloud instances

  controller_node_count:
    type: number
    default: 1
    description: Number of controller overcloud instances to deploy

  compute_node_count:
    type: number
    default: 1
    description: Number of compute overcloud instances to deploy

  private_net_admin:
    type: string
    default: private
    description: Name of an admin private network which will be associated with all instances

  private_net_cluster:
    type: string
    default: private
    description: Name of a cluster private network which will be associated with overcloud instances

  public_net:
    type: string
    default: public
    description: Name of the network to use for allocating a floating ip for the undercloud instance

  overcloud_name:
    type: string
    default: overcloud
    description: Name of the overcloud instances. The name will be prefixed with the stack name.

  undercloud_name:
    type: string
    default: undercloud
    description: Name of the undercloud instance. The name will be prefixed with the stack name.

  undercloud_flavor:
    type: string
    default: m1.large
    description: Nova flavor for the undercloud instance. Recommended to be at least 4
                 vcpu, 8 GB RAM, 40 GB disk

  undercloud_image:
    type: string
    default: CentOS-7-x86_64-GenericCloud-1503
    description: Image to boot as the undercloud instance

  ssh_ingress_cidr:
    type: string
    default: 0.0.0.0/0
    description: Allow SSH access from IP network

  cluster_ingress_cidr:
    type: string
    default: 0.0.0.0/0
    description: Allow TCP/UDP access from IP overcloud network

resources:

  sg_uc:
    type: OS::Neutron::SecurityGroup
    properties:
      name: sg
      description: Sec group for UC
      rules:
      - protocol: icmp
      - direction: ingress
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: { get_param: ssh_ingress_cidr }
      - direction: ingress
        protocol: udp
        remote_ip_prefix: { get_param: cluster_ingress_cidr }
      - direction: ingress
        protocol: tcp
        remote_ip_prefix: { get_param: cluster_ingress_cidr }

  sg_oc:
    type: OS::Neutron::SecurityGroup
    properties:
      name: sg
      description: Sec group for overcloud cluster
      rules:
      - protocol: icmp
      - direction: ingress
        protocol: udp
        remote_ip_prefix: { get_param: cluster_ingress_cidr }
      - direction: ingress
        protocol: tcp
        remote_ip_prefix: { get_param: cluster_ingress_cidr }

  public_network:
    type: OS::TraaS::PublicNetwork
    properties:
      public_net: {get_param: public_net}

  private_network_admin:
    type: OS::TraaS::PrivateNetworkAdmin
    properties:
      private_net_admin: {get_param: private_net_admin}

  private_network_cluster:
    type: OS::TraaS::PrivateNetworkCluster
    properties:
      private_net_cluster: {get_param: private_net_cluster}

  user_data_script:
    type: OS::Heat::Value
    properties:
      type: string
      value: |
        #!/bin/bash
        # Ensure dev requirements for pre-provisioned nodes, out of oooq/t-h-t scope
        setenforce 0
        sed -i 's/^SELINUX=.*/SELINUX=permissive/' /etc/selinux/config
        # FIXME hack repos with tripleo-repos tool to side step tripleo-ci
        rpm -q yum-plugin-priorities || yum -y install yum-plugin-priorities
        rpm -q deltarpm || yum -y install deltarpm
        rpm -q git || yum -y install git
        # use yet packaged tripleo-repos to setup dlrn, one time op and teardown
        rpm -q python-pip || yum -y install python-pip || easy_install pip
        pip install git+https://github.com/openstack/tripleo-repos@master
        tripleo-repos -b master current
        pip uninstall -y tripleo-repos requests urllib3
        yum -y reinstall python-requests python-urllib3
        # configure os-collect-config to enable heat to do its things
        yum -y install python-heat-agent*
        systemctl daemon-reload
        systemctl enable os-collect-config
        # unbound is required to have local resolver
        yum install -y unbound
        systemctl enable unbound
        sync
        reboot

  undercloud:
    depends_on: [public_network]
    type: OS::TraaS::Undercloud
    properties:
      undercloud_flavor: {get_param: undercloud_flavor}
      undercloud_image: {get_param: undercloud_image}
      key_name: {get_param: key_name}
      sg: {get_resource: sg_uc}
      undercloud_name:
        list_join:
          - '-'
          - - {get_param: 'OS::stack_name'}
            - {get_param: undercloud_name}
      undercloud_user_data: {get_attr: [user_data_script, value]}
      private_net_admin: {get_attr: [private_network_admin, private_net_admin]}
      private_net_cluster: {get_attr: [private_network_cluster, private_net_cluster]}
      public_net: {get_attr: [public_network, public_net]}

  overcloud_nodes:
    type: OS::TraaS::OvercloudNodes
    depends_on: [private_network_admin, private_network_cluster]
    properties:
      overcloud_flavor: {get_param: overcloud_flavor}
      overcloud_image: {get_param: overcloud_image}
      key_name: {get_param: key_name}
      controller_node_count: {get_param: controller_node_count}
      compute_node_count: {get_param: compute_node_count}
      private_net_admin: {get_attr: [private_network_admin, private_net_admin]}
      private_net_cluster: {get_attr: [private_network_cluster, private_net_cluster]}
      overcloud_user_data: {get_attr: [user_data_script, value]}
      sg: {get_resource: sg_oc}
      overcloud_name:
        list_join:
          - '-'
          - - {get_param: 'OS::stack_name'}
            - {get_param: overcloud_name}

  oooq_job:
    type: OS::TraaS::OooqJob
    depends_on: [undercloud, overcloud_nodes]
    properties:
      undercloud: {get_attr: [undercloud, undercloud_server]}
      undercloud_private_ip: {get_attr: [undercloud, undercloud_private_ip]}
      controller_overcloud_nodes: {get_attr: [overcloud_nodes, resource.controller_overcloud_nodes, attributes, overcloud_node]}
      compute_overcloud_nodes: {get_attr: [overcloud_nodes, resource.compute_overcloud_nodes, attributes, overcloud_node]}
      controller_private_ips: {get_attr: [overcloud_nodes, resource.controller_overcloud_nodes, overcloud_private_ip]}
      compute_private_ips: {get_attr: [overcloud_nodes, resource.compute_overcloud_nodes, overcloud_private_ip]}


outputs:
  controller_private_ips:
    description: multinode CONTROLLER_IPS param for oooq
    value:
      list_join:
        - ' '
        - {get_attr: [overcloud_nodes, resource.controller_overcloud_nodes, overcloud_private_ip]}
  compute_private_ips:
    description: multinode COMPUTE_IPS param for oooq
    value:
      list_join:
        - ' '
        - {get_attr: [overcloud_nodes, resource.compute_overcloud_nodes, overcloud_private_ip]}
